@namespace Blazr.UI.Common
@inject WeatherForecastListPresenter Presenter

<PageTitle>Weather Forecast List Form</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

@if (this.Presenter.WeatherForecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in this.Presenter.WeatherForecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureC.TemperatureAsDegF()</td>
                    <td>@forecast.Summary</td>
                    <td><button class="btn btn-primary" @onclick="() => this.OnEditAsync(forecast.WeatherForecastUID)" >Edit</button></td>
                </tr>
            }
        </tbody>
    </table>
}

<BsModalDialog @ref="_modalDialog" />

@code {
    private BsModalDialog? _modalDialog;

    private IModalDialogContext? _dialogContext => _modalDialog?.Context ?? null;

    protected override async Task OnInitializedAsync()
    {
        await this.Presenter.LoadAsync();
    }

    private async Task OnEditAsync(Guid uid)
    {
        var options = new ModalOptions();
        options.ControlParameters.Add("Uid", uid);

        if (_modalDialog is not null)
        await _modalDialog.Context.ShowAsync<WeatherForecastEditForm>(options);
    }
}
