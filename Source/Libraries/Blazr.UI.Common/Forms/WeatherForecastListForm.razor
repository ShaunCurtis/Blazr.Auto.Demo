@namespace Blazr.UI.Common
@inject WeatherForecastListPresenter Presenter

<PageTitle>Weather Forecast List Form</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

<div class="grid" tabindex="-1">
    <QuickGrid TGridItem="WeatherForecast" ItemsProvider="this.GetItemsAsync" Virtualize Class="table" >
        <PropertyColumn Property="item => item.Date " />
        <PropertyColumn Title="Temp &deg;C" Property="item => item.TemperatureC" />
        <PropertyColumn Title="Temp &deg;F" Property="item => item.TemperatureC.TemperatureAsDegF() " />
        <PropertyColumn Property="item => item.Summary" />
    </QuickGrid>

</div>

<div class="" tabindex="-1">
    <QuickGrid TGridItem="WeatherForecast" ItemsProvider="this.GetItemsAsync" Class="table" Pagination="_pagination">
        <PropertyColumn Property="item => item.Date " />
        <PropertyColumn Title="Temp &deg;C" Property="item => item.TemperatureC" />
        <PropertyColumn Title="Temp &deg;F" Property="item => item.TemperatureC.TemperatureAsDegF() " />
        <PropertyColumn Property="item => item.Summary" />
    </QuickGrid>
<Paginator State="_pagination" />
</div>

<BsModalDialog @ref="_modalDialog" />

@code {
    private BsModalDialog? _modalDialog;
    PaginationState _pagination = new PaginationState { ItemsPerPage = 10 };

    private IModalDialogContext? _dialogContext => _modalDialog?.Context ?? null;
    private GridItemsProvider<WeatherForecast>? itemsProvider;

    protected override async Task OnInitializedAsync()
    {
        await _pagination.SetCurrentPageIndexAsync(8);
        //await this.Presenter.LoadAsync();

    }

    private ValueTask<GridItemsProviderResult<WeatherForecast>> GetItemsAsync(GridItemsProviderRequest<WeatherForecast> request)
    {
        return this.Presenter.GetWeatherForecastsAsync(request);
    }

    private async Task OnEditAsync(Guid uid)
    {
        var options = new ModalOptions();
        options.ControlParameters.Add("Uid", uid);

        if (_modalDialog is not null)
        await _modalDialog.Context.ShowAsync<WeatherForecastEditForm>(options);
    }
}
